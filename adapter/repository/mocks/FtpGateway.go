// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	context "context"
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// FtpGateway is an autogenerated mock type for the FtpGateway type
type FtpGateway struct {
	mock.Mock
}

// CleanupDirContent provides a mock function with given fields: dir
func (_m *FtpGateway) CleanupDirContent(dir string) error {
	ret := _m.Called(dir)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(dir)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DirExists provides a mock function with given fields: dir
func (_m *FtpGateway) DirExists(dir string) (bool, error) {
	ret := _m.Called(dir)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(dir)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(dir)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MakeDir provides a mock function with given fields: path
func (_m *FtpGateway) MakeDir(path string) error {
	ret := _m.Called(path)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(path)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Upload provides a mock function with given fields: ctx, path, r
func (_m *FtpGateway) Upload(ctx context.Context, path string, r io.Reader) error {
	ret := _m.Called(ctx, path, r)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, io.Reader) error); ok {
		r0 = rf(ctx, path, r)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
